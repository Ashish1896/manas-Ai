// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for storing user information
model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique // Clerk user ID
  email     String   @unique
  firstName String?
  lastName  String?
  university String?
  location  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  assessments Assessment[]
  activities  UserActivity[]
  chatHistory ChatMessage[]

  @@map("users")
}

// Assessment model for storing mental health assessments
model Assessment {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Assessment scores (0-100 scale)
  stress      Int      @default(50)
  anxiety     Int      @default(50)
  sleep       Int      @default(50)
  
  // Assessment answers
  answers     Json     // Array of answers from the assessment questions
  
  // AI-generated recommendations
  activities  Json     // Array of recommended activities
  games       Json     // Array of recommended games
  
  // Metadata
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("assessments")
}

// User activity tracking
model UserActivity {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  name        String   // Activity name (e.g., "Meditation", "Journaling")
  duration    String   // Duration (e.g., "10 min", "15 min")
  completed   Boolean  @default(false)
  completedAt DateTime?
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("user_activities")
}

// Chat messages for AI conversations
model ChatMessage {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  role        String   // 'user' or 'assistant'
  content     String
  timestamp   DateTime @default(now())
  
  // Optional assessment impact tracking
  stressImpact     Int?
  anxietyImpact    Int?
  sleepImpact      Int?

  @@map("chat_messages")
}

// Mindfulness games tracking
model MindfulnessGame {
  id          String   @id @default(cuid())
  userId      String
  
  name        String   // Game name (e.g., "Mindful Breathing", "Color Therapy")
  duration    String   // Duration (e.g., "5 min", "10 min")
  completed   Boolean  @default(false)
  completedAt DateTime?
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("mindfulness_games")
}

// User mood tracking
model MoodEntry {
  id          String   @id @default(cuid())
  userId      String
  
  mood        String   // Emoji or mood description
  notes       String?  // Optional notes about the mood
  stress      Int?     // Optional stress level (1-10)
  anxiety     Int?     // Optional anxiety level (1-10)
  sleep       Int?     // Optional sleep quality (1-10)
  
  createdAt   DateTime @default(now())

  @@map("mood_entries")
}
